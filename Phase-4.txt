 Phase 4: Process Automation (Admin)

PROJECT TITLE:- 
Expense On a Page: An expense approval & insight system.
Industry: Finance / Corporate Expense Management.
Target User: Employees, Managers, and Finance Teams.

VALIDATION RULE:-
1.	Making a validation rule for Amount field on the Expense_Line custom object to ensure that the amount enter is greater than zero before saving the record on the object.
•	Rule Name: No Zero Amount
•	Active: Enabled
•	Description: To make sure the amount is not in negative or zero.
•	Error Condition Formula:  Amount__c  <= 0
•	Error Message: The amount cannot be in negative or zero.
•	Error Location: Field (Amount)


2.	Making a validation rule for the Submission Date field on the Expense custom object, that validates that the submission date is not in the future and is in the present before a record is saved.
•	Rule Name: Current date
•	Active: Enabled
•	Description: To make sure that the date is not in the future
•	Error Condition Formula: Submission_Date__c  > TODAY()
•	Error Message: The date cannot be in future.
•	Error Location: Field (Submission Date)



3.	Making a Validation Rule for the Expense_Line custom object, that validates that if the Amount is greater than 500 then the Receipt URL needs to be given.
•	Rule Name: need for URL
•	Active: Enabled
•	Description: If the amount is greater than 500 the receipt URL is needed.
•	Error Condition Formula: AND (  Amount__c  > 500, ISBLANK( Receipt_URL__c ))
•	Error Message: Enter URL as Amount is higher than 500.
•	Error Location: Top of Page





WORKFLOW RULES:-
1.	Creating a Workflow Rules for Expense object, for when the status of a record is Approved and the total amount is greater than 10000 there is an Email Alert sent to Finance Team.

(a)	Creating a custom Email Template- 
Email Template Name: Expense Approval Template
Description: This email needs to be sent to the Finance Team when the record is approved
Related Entity Type: Expense
Folder: Private Email Templates 

(Message Content)
Subject: Expense Approved.
Html Value:
Hello Finance Team, 

Expense {{{Expense__c.Name}}} submitted by {{{Expense__c.Employee__c}}}
has been approved for a total of {{{Expense__c.Total_Amount__c}}}.

Thank You,
Expense Management Team.


(b)	Creating a new Email Alert-
Description: Alert for Finance team for an expense approval
Unique Name: Alert_for_Finanace_team_for_an_expense_approval
Object: Expense
Email Template: Expense Approval Template
Recipient Type: User 




(c)	Creating a Worklflow Rule –
Object: Expense
Rule Name: Finance Team-approval mail
Description: This email needs to be sent to the Finance Team when the record is approved
Evaluation Criteria: Evaluate the rule when a record is: created, and any time it's edited to subsequently meet criteria.
Rule Criteria: 
Expense: Status= Approved 
Expense: Total Amoun> 10000

Adding the email alert, we created 


PROCESS BUILDER:-

1)	When the Status of an Expense custom object is Submitted then the Submission Date will be automatically updated as Today. –

Name: Status submitted submission today
API Name: Status_submitted_submission_today
(Object)
Condition: When a record is created 
Object: Expense_c
(Criteria)
Criteria Name: Status Submitted
Criteria for Executing Actions: Conditions are met 
Set Conditions:  Field- Expense__c.Status
                             Operator- Equals
                             Type- Picklist
                             Value- Submitted 
All of the conditions are met (AND): Enabled 
Do you want to execute the actions only when specified changes are made to the record?: Yes
(Immediate Actions)
Action Type: Update Records 
Action Name: Submission today 
Record Type: Select the Expense__c record that started your process
New Fields Value: Field- Submission Date
                                 Type- Formula
                                  Value: TODAY()


APPROVAL PROCESS:-
The main goal of making the whole project is to make the approval process for expenses by employee easy and manageable so this is the most important and needed step in the project.
To enter an Expense record for approval-
•	The status of the record needs to be Submitted.
•	And the Total Amount needs to be above 3000 rupees.
Once it is eligible for approval, it will go to-
•	If the Total Amount is between 3000 to 12000 it will go to Manager for approval.
•	If the Total Amount is greater than 12000 it will go to the finance team for approval.
The manager or the Finance Team can take only two actions-
•	On Approval- Status Fields is updated to Approved.
•	On Rejection- Status Field is updated to Rejected.

Creating the approval process:
Object: Expense
Create New Approval Process: Use Standard Setup Wizard.
•	Step 1
Process Name: Expense approval
Unique Name: Expense_approval
Description: this is for manager and finance team approval of a record
•	Step 2. Specify Entry Criteria
i)	Field: Expense: Status
Operator: equals
Value: Submitted 
ii)	Field: Expense: Total Amount 
Operator: greater than 
Value: 3000
Adding approval steps-
•	Step 1
Name: Manager approval
Unique Name: Manager_approval
Description: This will go to manager for approval
Criteria: Field- Expense: Total Amount
                Operator: Greater than 
                Value: 3000

Approver: User: Rahul Reddy (Manager)
•	Step 2
Name: Finance Team Approval 
Unique Name: Finance_Team_Approval
Description: This will go to the Finance Team for approval.
Criteria: Field- Expense: Total Amount
                Operator: Greater than 
                Value: 12000
Approvers: User: Priya Finance
Final Approval Actions-
•	Add New: Field Update
•	Name: Status Approve
•	Unique Name: Status_Approve
•	Description: Changing the status of the record to approved
•	Object: Expense
•	Field to Update: Status 
•	Value: Approved 
Final Rejection Actions-
•	Add New: Field Update
•	Name: Status Reject
•	Unique Name: Status_Reject
•	Description: Changing the status of the record to Reject
•	Object: Expense
•	Field to Update: Status 
•	Value: Rejected 


FLOW BUILDER:-
1)	Record-Triggered Flow:
When an Expense record is created with its status field as Submitted and the Total Amount is above the threshold then, Launch Approval Process.

Creating the Flow:
•	New Automation Type: Record-Triggered flow
•	Configure Start-
Object: Expense
Configure Trigger: A record is created or updated
Optimize Flow: Actions and Related Records (After Save)
Set Entry Condition: Condition Requirement- All Conditions Are Met (AND)
Condition 1:  Field: Status 
                       Operator: Equals
                       Value: Submitted
Condition 2: Field: Total Amount
                      Operator: Greater Than 
                       Value: 3000
•	Decision-
Label: Need Approval 
API Name: Need_Approval

Outcome 1 Details: 
Label- Send Approval
Outcome API Name- Send_Approval
Condition Requirements to Execute Outcome- All Condition Are Met (AND)
Resource: Expense__c > Total Amount 
Operator: Greater Than 
Value: 3000
 
Outcome 2 Details: 
Label: Auto Approval
Outcome API Name- Auto_Approval
Condition Requirements to Execute Outcome: All Condition Are Met (AND)
Resource: Expense__c > Total Amount 
Operator: Greater Than 
Value: 3000

Outcome 1 Action:
Label: Auto Submit for Approval
API Name: Auto_Submit_for_Approval
 

Outcome 1 Update Record:
Label- Status to pending
API Name - Status_to_pending
How to Find Records to Update and Set Their Values: Use the expense record that triggered the flow
Field Value- Field: Status 
                      Value: Pending Approval

Outcome 2 Update Record:
Label: Status to approve
API Name: Status_to_approve
How to Find Records to Update and Set Their Values: Use the expense record that triggered the flow
Field Value- Field: Status 
                      Value: Approved 

Saving the Flow: 
Flow Label: Launch Approval Process
Flow API Name: Launch_Approval_Process

Finally Activating It


2)	Scheduled-Triggered Flow:
To send a weekly Reminder to the Manager for “Pending Approval” Expenses.

Creating the Flow:
•	New Automation Type: Scheduled-Triggered flow
•	Set a Schedule-
Start Date: Sep 21, 2025
Start Time: 12:00 AM
Frequency: Weekly 
•	Get Records-
Label: Get Pending Expense
API Name: Get_Pending_Expenses
Object: Expense 
Filter: Condition Requirements- All Conditions Are Met (AND)
Condition 1: Field- Status 
                      Operator: Equals
                       Value: Pending Approval
•	Decision-
Label: Pending Detail
API Name: Pending_Detail

Outcome Detail 1:
Label- When there is value
API Name- When_there_is_value
Condition Requirements to Execute Outcome: All Condition Are Met (AND)
Resource: Expense from Get Pending Expenses
Operator: Is Empty 
Value: False

•	Loop-
Label: Loop Pending Expenses
API Name: Loop_Pending_Expenses
Collection Variable: Get Pending Expense
Direction: First Item to Last Item 
(Inside Loop)
•	Get Record-
Label: Get Employee Manager
API Name: Get_Employee_Manager
Object: User
Filter: Condition Requirements- All Conditions Are Met (AND)
Condition 1: Field- User ID  
                      Operator: Equals
                       Value: Loop Pending Expenses> user 
Select Fields: Choose fields 
                       Manager Id 
                        Email
•	Send Email-
Label: sending the email
API Name: sending_the_email
Recipient Address List: User from Get Employee Manager 
Subject: loop pending Expenses> record type id 
Email Body: This expense requires your approval. Amount: {!Loop_Pending_Expenses.Total_Amount__c}

•	Saving the flow-
Label: Pending Approval 
API Name: Pending_Approval 





EMAIL ALERTS:-
1)	Expense is Submitted: Sending an email to the Employee when a record is submitted.

Email Template:
Email Template Name: Expense is Submitted 
Description: Sending an email to the Employee when a record is submitted.
Related Entity Type: Expense
Folder: Public Email Templates
(Message Content)
Subject: Expense is submitted
Html Value:
Dear {{{Expense__c.Employee__c}}},
Your Expense file ({{{Expense__c.Expense_Detail__c}}}), of 
Total Amount {{{Expense__c.Total_Amount__c}}} has been submitted on {{{Expense__c.Submission_Date__c}}}.
Thank You.

Email Alert:
Description: Sending an email to the Employee when a record is submitted
Unique Name: Sending_an_email_to_the_Employee_when_a_record_is_submitted
Object: Expense
Email Template: Expense Approval Template
Recipient Type: User

                        
2)	Expense is Approved: Sending an email to the employee when the record is Approved.
This was made before during the Workflow Rule.

3)	Expense is Rejected: Sending an email to the employee when the record is Rejected.

Email Template:
Email Template Name: Expense is Rejected
Description: Sending an email to the employee when the record is Rejected.
Related Entity Type: Expense
Folder: Public Email Templates
(Message Content)
Subject: Expense is Rejected
Html Value:
 Dear {{{Expense__c.Employee__c}}},

Your Expense ({{{Expense__c.Expense_Detail__c}}}) of Total Amount {{{Expense__c.Total_Amount__c}}} created on {{{Expense__c.Submission_Date__c}}} is rejected.

Thank You,
Expense Management Team.


Email Alert:
Description: Sending an email to the Employee when a record is submitted
Unique Name: Sending_an_email_to_the_Employee_when_a_record_is_submitted
Object: Expense
Email Template: Expense is Rejected.
Recipient Type: User

FIELDS UPDATE:- 
It was made during the Approval Process 
TASKS:-
With the help of task let’s make a Task for Employee if Expense is rejected, they have to correct it and then resubmit it.
Making a Record-Triggered Flow for this Task.
a.	Configure Start-
Object: Expense
Configure Trigger: A record is updated
Optimize Flow: Actions and Related Records (After Save)
Set Entry Condition: Condition Requirement- All Conditions Are Met (AND)
Condition 1:  Field: Status 
                       Operator: Equals
                       Value: Rejected
b.	Create Records-
             Label: Create Resubmission Task
             API Name: Create_Resubmission_Task
            How to set record field value: Manually 
            How Many Records to Create: One
            Object: Task 
            Value 1: Field- Subject 
                           Value- "Resubmit Expense with Corrections"
            Value 2: Field- Priority  
                           Value- High 
            Value 3: Field- Status 
                            Value- Not Started
            Value 4: Field- Due Date Only 
                            Value- TODAY() + 3
            Value 5: Field- Related To ID
                           Value- Expense> Created by ID 
            Value 6: Field- Assigned To ID
                           Value- Expense> Owner ID 

c.	Saving the Flow-
     Label- Expense_Rejected_Create_Task_Flow
     API Name- Expense_Rejected_Create_Task_Flow
    Activate it                   

